{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/xampp/htdocs/synseai/project/frontend/src/components/DashboardSidebar.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function DashboardSidebar() {\r\n  const pathname = usePathname();\r\n  const [role, setRole] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedRole = sessionStorage.getItem(\"role\");\r\n    setRole(storedRole);\r\n  }, []);\r\n\r\n  // Menus\r\n  const collabMenu = [\r\n    { href: \"/dashboard\", icon: \"/images/Sidebar_home.png\", label: \"Home\" },\r\n    { href: \"/collabapproved\", icon: \"/images/Folder_check.png\", label: \"Approved\" },\r\n    { href: \"/collabinprocess\", icon: \"/images/folder-send.png\", label: \"In Process\" },\r\n    { href: \"/collabrejected\", icon: \"/images/Folder_del.png\", label: \"Rejected\" },\r\n  ];\r\n\r\n  const employeeMenu = [\r\n    { href: \"/bpidashboard\", icon: \"/images/Sidebar_home.png\", label: \"Home\" },\r\n    { href: \"/bpiapproved\", icon: \"/images/Folder_check.png\", label: \"Approved\" },\r\n    { href: \"/bpiinprocess\", icon: \"/images/folder-send.png\", label: \"In Process\" },\r\n    { href: \"/bpirejected\", icon: \"/images/Folder_del.png\", label: \"Rejected\" },\r\n    { href: \"/bpifilesviewer\", icon: \"/images/Folder_del.png\", label: \"FileViewer\" },\r\n    { href: \"/companylist\", icon: \"/images/building-03.png\", label: \"Collaborators\" },\r\n    { href: \"/bpifindcollab\", icon: \"/images/peer-to-peer-02.png\", label: \"Find Collaborators\" },\r\n  ];\r\n\r\n  const adminMenu = [\r\n    { href: \"/admindashboard\", icon: \"/images/Sidebar_home.png\", label: \"Home\" },\r\n    { href: \"/bpiapproved\", icon: \"/images/Folder_check.png\", label: \"Approved\" },\r\n    { href: \"/bpiinprocess\", icon: \"/images/folder-send.png\", label: \"In Process\" },\r\n    { href: \"/bpirejected\", icon: \"/images/Folder_del.png\", label: \"Rejected\" },\r\n    { href: \"/adminfilesviewer\", icon: \"/images/Folder_del.png\", label: \"FileViewer\" },\r\n    { href: \"/companylist\", icon: \"/images/building-03.png\", label: \"Collaborators\" },\r\n    { href: \"/bpifindcollab\", icon: \"/images/peer-to-peer-02.png\", label: \"Find Collaborators\" },\r\n  ];\r\n\r\n  const menuItems =\r\n    role === \"user\" ? collabMenu : role === \"employee\" ? employeeMenu : role === \"admin\" ? adminMenu : [];\r\n\r\n  return (\r\n    <motion.aside\r\n      initial={{ x: -250, opacity: 0 }}\r\n      animate={{ x: 0, opacity: 1 }}\r\n      exit={{ x: -250, opacity: 0 }}\r\n      transition={{\r\n        duration: 0.2,\r\n        ease: [0.25, 0.1, 0.25, 1], // smooth cubic-bezier\r\n      }}\r\n      className=\"pl-4 group relative bg-white border-r flex flex-col items-center items-start py-4 space-y-6 h-screen w-20 hover:w-56 transition-all duration-300 overflow-hidden\"\r\n    >\r\n      {/* Logo */}\r\n      <div className=\"flex items-center gap-3 pl-1\">\r\n        <img src=\"/logo/synsei_icon.png\" alt=\"Logo\" className=\"w-10\" />\r\n        <span className=\"text-lg font-bold text-gray-800 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\r\n          Synsei\r\n        </span>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <nav className=\"flex flex-col space-y-2 w-[92%]\">\r\n        {menuItems.map((item, index) => (\r\n          <a\r\n            key={index}\r\n            href={item.href}\r\n            className={`flex items-center gap-3 rounded-lg transition-all duration-200\r\n              ${pathname === item.href ? \"bg-[#FEC2C5]\" : \"hover:bg-gray-100\"}\r\n              px-2 py-2 w-12 group-hover:w-full`}\r\n          >\r\n            <img src={item.icon} alt={item.label} className=\"w-8 h-8\" />\r\n            <span className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap\">\r\n              {item.label}\r\n            </span>\r\n          </a>\r\n        ))}\r\n      </nav>\r\n    </motion.aside>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM,aAAa,eAAe,OAAO,CAAC;YAC1C,QAAQ;QACV;qCAAG,EAAE;IAEL,QAAQ;IACR,MAAM,aAAa;QACjB;YAAE,MAAM;YAAc,MAAM;YAA4B,OAAO;QAAO;QACtE;YAAE,MAAM;YAAmB,MAAM;YAA4B,OAAO;QAAW;QAC/E;YAAE,MAAM;YAAoB,MAAM;YAA2B,OAAO;QAAa;QACjF;YAAE,MAAM;YAAmB,MAAM;YAA0B,OAAO;QAAW;KAC9E;IAED,MAAM,eAAe;QACnB;YAAE,MAAM;YAAiB,MAAM;YAA4B,OAAO;QAAO;QACzE;YAAE,MAAM;YAAgB,MAAM;YAA4B,OAAO;QAAW;QAC5E;YAAE,MAAM;YAAiB,MAAM;YAA2B,OAAO;QAAa;QAC9E;YAAE,MAAM;YAAgB,MAAM;YAA0B,OAAO;QAAW;QAC1E;YAAE,MAAM;YAAmB,MAAM;YAA0B,OAAO;QAAa;QAC/E;YAAE,MAAM;YAAgB,MAAM;YAA2B,OAAO;QAAgB;QAChF;YAAE,MAAM;YAAkB,MAAM;YAA+B,OAAO;QAAqB;KAC5F;IAED,MAAM,YAAY;QAChB;YAAE,MAAM;YAAmB,MAAM;YAA4B,OAAO;QAAO;QAC3E;YAAE,MAAM;YAAgB,MAAM;YAA4B,OAAO;QAAW;QAC5E;YAAE,MAAM;YAAiB,MAAM;YAA2B,OAAO;QAAa;QAC9E;YAAE,MAAM;YAAgB,MAAM;YAA0B,OAAO;QAAW;QAC1E;YAAE,MAAM;YAAqB,MAAM;YAA0B,OAAO;QAAa;QACjF;YAAE,MAAM;YAAgB,MAAM;YAA2B,OAAO;QAAgB;QAChF;YAAE,MAAM;YAAkB,MAAM;YAA+B,OAAO;QAAqB;KAC5F;IAED,MAAM,YACJ,SAAS,SAAS,aAAa,SAAS,aAAa,eAAe,SAAS,UAAU,YAAY,EAAE;IAEvG,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,KAAK;QACX,SAAS;YAAE,GAAG,CAAC;YAAK,SAAS;QAAE;QAC/B,SAAS;YAAE,GAAG;YAAG,SAAS;QAAE;QAC5B,MAAM;YAAE,GAAG,CAAC;YAAK,SAAS;QAAE;QAC5B,YAAY;YACV,UAAU;YACV,MAAM;gBAAC;gBAAM;gBAAK;gBAAM;aAAE;QAC5B;QACA,WAAU;;0BAGV,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,KAAI;wBAAwB,KAAI;wBAAO,WAAU;;;;;;kCACtD,6LAAC;wBAAK,WAAU;kCAAoG;;;;;;;;;;;;0BAMtH,6LAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,sBACpB,6LAAC;wBAEC,MAAM,KAAK,IAAI;wBACf,WAAW,AAAC,iFACsD,OAA9D,aAAa,KAAK,IAAI,GAAG,iBAAiB,qBAAoB;;0CAGlE,6LAAC;gCAAI,KAAK,KAAK,IAAI;gCAAE,KAAK,KAAK,KAAK;gCAAE,WAAU;;;;;;0CAChD,6LAAC;gCAAK,WAAU;0CACb,KAAK,KAAK;;;;;;;uBARR;;;;;;;;;;;;;;;;AAejB;GA9EwB;;QACL,qIAAA,CAAA,cAAW;;;KADN","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///C:/xampp/htdocs/synseai/project/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  allowedRoles: string[]; // e.g. [\"user\", \"employee\"]\r\n}\r\n\r\nexport default function ProtectedRoute({ children, allowedRoles }: ProtectedRouteProps) {\r\n  const router = useRouter();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    if (!token || !role) {\r\n      router.push(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (!allowedRoles.includes(role)) {\r\n      router.push(\"/\"); // redirect if role not allowed\r\n      return;\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [router, allowedRoles]);\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AASe,SAAS,eAAe,KAA+C;QAA/C,EAAE,QAAQ,EAAE,YAAY,EAAuB,GAA/C;;IACrC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,QAAQ,eAAe,OAAO,CAAC;YACrC,MAAM,OAAO,eAAe,OAAO,CAAC;YAEpC,IAAI,CAAC,SAAS,CAAC,MAAM;gBACnB,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,IAAI,CAAC,aAAa,QAAQ,CAAC,OAAO;gBAChC,OAAO,IAAI,CAAC,MAAM,+BAA+B;gBACjD;YACF;YAEA,WAAW;QACb;mCAAG;QAAC;QAAQ;KAAa;IAEzB,qBAAO;kBAAG;;AACZ;GAtBwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["file:///C:/xampp/htdocs/synseai/project/frontend/src/app/adminusermanagement/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Sidebar from \"@/components/DashboardSidebar\";\r\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { FaUsers, FaUserTie, FaUserFriends, FaFileAlt, FaBuilding, FaUserShield, FaArrowLeft } from \"react-icons/fa\"; \r\n\r\ninterface User {\r\n  id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  full_name: string;\r\n  email: string;\r\n  contact_number?: string;\r\n  role: \"employee\" | \"user\" | \"admin\";\r\n  position?: string;\r\n  department_id?: number;\r\n  created_at: string;\r\n}\r\n\r\ninterface Department {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\nexport default function UserManagement() {\r\n    const API = process.env.NEXT_PUBLIC_API_URL;\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [updating, setUpdating] = useState<number | null>(null);\r\n    const [selectedUsers, setSelectedUsers] = useState<Set<number>>(new Set());\r\n    const [showCreateModal, setShowCreateModal] = useState(false);\r\n    const [showRoleModal, setShowRoleModal] = useState(false);\r\n    const [showEditUserModal, setShowEditUserModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    const [bulkRole, setBulkRole] = useState<string>('');\r\n    const [bulkDepartment, setBulkDepartment] = useState<string>('');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [roleFilter, setRoleFilter] = useState<string>('all');\r\n    const [statusFilter, setStatusFilter] = useState<string>('all');\r\n    const [selectedUserForEdit, setSelectedUserForEdit] = useState<User | null>(null);\r\n    const [selectedUserForDelete, setSelectedUserForDelete] = useState<User | null>(null);\r\n    const router = useRouter();\r\n\r\n    const [departments, setDepartments] = useState<Department[]>([]);\r\n    const [departmentFilter, setDepartmentFilter] = useState(\"all\");\r\n\r\n    // New user form state\r\n    const [newUser, setNewUser] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        role: 'user',\r\n        password: '',\r\n        contact_number: '',\r\n        position: '',\r\n        department_id: ''\r\n    });\r\n\r\n    // Edit user form state\r\n    const [editUser, setEditUser] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        role: '',\r\n        contact_number: '',\r\n        position: '',\r\n        department_id: ''\r\n    });\r\n\r\n    const handleRoleChange = (newRole: string) => {\r\n            setNewUser({ \r\n                ...newUser, \r\n                role: newRole, \r\n                department_id: newRole === 'admin' ? '' : newUser.department_id \r\n            });\r\n        };\r\n\r\n        const handleEditRoleChange = (newRole: string) => {\r\n            setEditUser({ \r\n                ...editUser, \r\n                role: newRole, \r\n                department_id: newRole === 'admin' ? '' : editUser.department_id \r\n            });\r\n        };\r\n\r\n    useEffect(() => {\r\n  const fetchDepartments = async () => {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    try {\r\n      const deptRes = await fetch(`${API}/api/department`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!deptRes.ok) throw new Error(\"Failed to fetch departments\");\r\n\r\n      const data = await deptRes.json();\r\n      setDepartments(data.departments || []);\r\n    } catch (err) {\r\n      console.error(\"Error fetching departments:\", err);\r\n      setDepartments([]);\r\n    }\r\n  };\r\n\r\n  fetchDepartments();\r\n}, [API]);\r\n\r\n    useEffect(() => {\r\n    const fetchAllUsers = async () => {\r\n        const token = sessionStorage.getItem(\"access_token\");\r\n        try {\r\n        const res = await fetch(`${API}/api/user`, {\r\n            headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n\r\n        if (!res.ok) throw new Error(\"Failed to fetch users\");\r\n        const data = await res.json();\r\n\r\n        setUsers(Array.isArray(data) ? data : []); // backend returns an array\r\n        } catch (err) {\r\n        console.error(\"Error fetching users:\", err);\r\n        setUsers([]);\r\n        } finally {\r\n        setLoading(false);\r\n        }\r\n    };\r\n\r\n    fetchAllUsers();\r\n    }, [API]);\r\n\r\n    const formatDate = (dateString: string) => {\r\n        const date = new Date(dateString);\r\n        return `${date.toLocaleDateString(\"en-US\", {\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n        })} | ${date.toLocaleTimeString(\"en-US\", {\r\n            hour: \"numeric\",\r\n            minute: \"2-digit\",\r\n            hour12: true,\r\n        })}`;\r\n    };\r\n\r\n    // Get department name by ID\r\n    const getDepartmentName = (departmentId?: number, userRole?: string) => {\r\n        // Admins should not have departments\r\n        if (userRole === 'admin') return \"Admin Department\";\r\n        \r\n        if (!departmentId) return \"N/A\";\r\n        \r\n        // Convert departmentId to string for comparison since backend returns string IDs\r\n        const dept = departments.find(d => parseInt(d.id) === departmentId || d.id === String(departmentId));\r\n        return dept ? dept.name : \"N/A\";\r\n    };\r\n\r\n    // Filter users based on search and filters\r\n   const filteredUsers = users.filter(user => {\r\n  const matchesSearch =\r\n    user.full_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    user.email.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n  const matchesRole = roleFilter === \"all\" || user.role === roleFilter;\r\n\r\n  const matchesDepartment =\r\n    departmentFilter === \"all\" || String(user.department_id) === departmentFilter;\r\n\r\n  return matchesSearch && matchesRole && matchesDepartment;\r\n});\r\n\r\n    // Handle user update (role and department)\r\n    const handleUserUpdate = async (userId: number, updates: any) => {\r\n        const token = sessionStorage.getItem(\"access_token\");\r\n        setUpdating(userId);\r\n        \r\n        try {\r\n            const res = await fetch(`${API}/api/user/${userId}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(updates),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                throw new Error(errorData.message || \"Failed to update user\");\r\n            }\r\n\r\n            const updatedUserFromServer = await res.json();\r\n\r\n            // Update local state with the actual server response\r\n            setUsers(prevUsers =>\r\n                prevUsers.map(user =>\r\n                    user.id === userId ? {\r\n                        ...user,\r\n                        first_name: updatedUserFromServer.first_name,\r\n                        last_name: updatedUserFromServer.last_name,\r\n                        full_name: updatedUserFromServer.full_name,\r\n                        email: updatedUserFromServer.email,\r\n                        contact_number: updatedUserFromServer.contact_number,\r\n                        role: updatedUserFromServer.role,\r\n                        position: updatedUserFromServer.position,\r\n                        department_id: updatedUserFromServer.department_id\r\n                    } : user\r\n                )\r\n            );\r\n\r\n            alert(`User updated successfully!`);\r\n            \r\n        } catch (err) {\r\n            console.error(\"Error updating user:\", err);\r\n            alert(`Error updating user: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n        } finally {\r\n            setUpdating(null);\r\n        }\r\n    };\r\n\r\n    // Open edit user modal\r\n    const openEditUserModal = (user: User) => {\r\n        setSelectedUserForEdit(user);\r\n        setEditUser({\r\n            first_name: user.first_name,\r\n            last_name: user.last_name,\r\n            email: user.email,\r\n            role: user.role,\r\n            contact_number: user.contact_number || '',\r\n            position: user.position || '',\r\n            department_id: user.department_id ? String(user.department_id) : ''\r\n        });\r\n        setShowEditUserModal(true);\r\n    };\r\n\r\n    // Handle edit user submission\r\n    const handleEditUserSubmit = async () => {\r\n        if (!selectedUserForEdit) return;\r\n        \r\n        const updates: any = {\r\n            first_name: editUser.first_name,\r\n            last_name: editUser.last_name,\r\n            email: editUser.email,\r\n            role: editUser.role,\r\n            contact_number: editUser.contact_number,\r\n            position: editUser.position\r\n        };\r\n\r\n        // Only include department_id if a department is selected AND user is not admin\r\n        if (editUser.role !== 'admin') {\r\n            updates.department_id = editUser.department_id ? parseInt(editUser.department_id) : null;\r\n        } else {\r\n            // Admins should have no department\r\n            updates.department_id = null;\r\n        }\r\n        \r\n        await handleUserUpdate(selectedUserForEdit.id, updates);\r\n        setShowEditUserModal(false);\r\n        setSelectedUserForEdit(null);\r\n        setEditUser({\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            role: '',\r\n            contact_number: '',\r\n            position: '',\r\n            department_id: ''\r\n        });\r\n    };\r\n\r\n    // Open delete modal\r\n    const openDeleteModal = (user: User) => {\r\n        setSelectedUserForDelete(user);\r\n        setShowDeleteModal(true);\r\n    };\r\n\r\n    // Handle delete user\r\n    const handleDeleteUser = async () => {\r\n        if (!selectedUserForDelete) return;\r\n\r\n        const token = sessionStorage.getItem(\"access_token\");\r\n        try {\r\n            const res = await fetch(`${API}/api/user/${selectedUserForDelete.id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                throw new Error(errorData.message || \"Failed to delete user\");\r\n            }\r\n\r\n            setUsers((prevUsers) => prevUsers.filter((user) => user.id !== selectedUserForDelete.id));\r\n            alert(\"User deleted successfully!\");\r\n            \r\n        } catch (err) {\r\n            console.error(\"Error deleting user:\", err);\r\n            alert(\r\n                `Error deleting user: ${\r\n                    err instanceof Error ? err.message : \"Unknown error\"\r\n                }`\r\n            );\r\n        } finally {\r\n            setShowDeleteModal(false);\r\n            setSelectedUserForDelete(null);\r\n        }\r\n    };\r\n\r\n    // Update bulk operations to handle both role and department\r\n    const handleBulkAssignment = async () => {\r\n        if (selectedUsers.size === 0) {\r\n            alert(\"Please select users first\");\r\n            return;\r\n        }\r\n\r\n        if (!bulkRole && !bulkDepartment) {\r\n            alert(\"Please select either a role or department to assign\");\r\n            return;\r\n        }\r\n\r\n        const token = sessionStorage.getItem(\"access_token\");\r\n\r\n        try {\r\n            const updates: any = {};\r\n            if (bulkRole) updates.role = bulkRole;\r\n            if (bulkDepartment) updates.department_id = parseInt(bulkDepartment);\r\n\r\n            const promises = Array.from(selectedUsers).map((userId) =>\r\n                fetch(`${API}/api/user/${userId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(updates),\r\n                })\r\n            );\r\n\r\n            const responses = await Promise.all(promises);\r\n            \r\n            // Get all updated user data from server responses\r\n            const updatedUsersData = await Promise.all(\r\n                responses.map(response => response.json())\r\n            );\r\n\r\n            setUsers((prevUsers) =>\r\n                prevUsers.map((user) => {\r\n                    if (selectedUsers.has(user.id)) {\r\n                        const updatedUser = updatedUsersData.find(u => u.id === user.id);\r\n                        return updatedUser ? {\r\n                            ...user,\r\n                            first_name: updatedUser.first_name,\r\n                            last_name: updatedUser.last_name,\r\n                            full_name: updatedUser.full_name,\r\n                            email: updatedUser.email,\r\n                            contact_number: updatedUser.contact_number,\r\n                            role: updatedUser.role,\r\n                            position: updatedUser.position,\r\n                            department_id: updatedUser.department_id\r\n                        } : user;\r\n                    }\r\n                    return user;\r\n                })\r\n            );\r\n\r\n            setSelectedUsers(new Set());\r\n            setBulkRole(\"\");\r\n            setBulkDepartment(\"\");\r\n            setShowRoleModal(false);\r\n            alert(\"Bulk assignment completed!\");\r\n        } catch (err) {\r\n            console.error(\"Error in bulk assignment:\", err);\r\n            alert(\r\n                `Error in bulk assignment: ${\r\n                    err instanceof Error ? err.message : \"Unknown error\"\r\n                }`\r\n            );\r\n        }\r\n    };\r\n\r\n    // Handle create new user\r\n    const handleCreateUser = async () => {\r\n        if (!newUser.first_name || !newUser.last_name || !newUser.email || !newUser.password) {\r\n            alert('Please fill in all required fields');\r\n            return;\r\n        }\r\n\r\n        const token = sessionStorage.getItem(\"access_token\");\r\n        \r\n        try {\r\n            const userData: any = {\r\n                first_name: newUser.first_name,\r\n                last_name: newUser.last_name,\r\n                email: newUser.email,\r\n                password: newUser.password,\r\n                role: newUser.role,\r\n                contact_number: newUser.contact_number,\r\n                position: newUser.position\r\n            };\r\n\r\n            // Only include department_id if a department is selected AND user is not admin\r\n            if (newUser.role !== 'admin' && newUser.department_id) {\r\n                userData.department_id = parseInt(newUser.department_id);\r\n            }\r\n\r\n            const res = await fetch(`${API}/api/auth/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(userData),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                throw new Error(errorData.message || \"Failed to create user\");\r\n            }\r\n\r\n            const data = await res.json();\r\n            \r\n            // Create user object that matches the expected format for the frontend\r\n            const newUserForState: User = {\r\n                id: data.user.id,\r\n                first_name: data.user.first_name,\r\n                last_name: data.user.last_name,\r\n                full_name: data.user.full_name || `${data.user.first_name} ${data.user.last_name}`,\r\n                email: data.user.email,\r\n                contact_number: data.user.contact_number,\r\n                role: data.user.role as \"employee\" | \"user\" | \"admin\",\r\n                position: data.user.position,\r\n                department_id: data.user.department_id,\r\n                created_at: data.user.created_at || new Date().toISOString()\r\n            };\r\n            \r\n            setUsers(prev => [...prev, newUserForState]);\r\n            setNewUser({ \r\n                first_name: '', \r\n                last_name: '', \r\n                email: '', \r\n                role: 'user', \r\n                password: '', \r\n                contact_number: '', \r\n                position: '',\r\n                department_id: ''\r\n            });\r\n            setShowCreateModal(false);\r\n            alert('User created successfully!');\r\n            \r\n        } catch (err) {\r\n            console.error(\"Error creating user:\", err);\r\n            alert(`Error creating user: ${err instanceof Error ? err.message : 'Unknown error'}`);\r\n        }\r\n    };\r\n\r\n    // Toggle user selection for bulk operations\r\n    const toggleUserSelection = (userId: number) => {\r\n        const newSelection = new Set(selectedUsers);\r\n        if (newSelection.has(userId)) {\r\n            newSelection.delete(userId);\r\n        } else {\r\n            newSelection.add(userId);\r\n        }\r\n        setSelectedUsers(newSelection);\r\n    };\r\n\r\n    // Select all filtered users\r\n    const selectAllUsers = () => {\r\n        const allFilteredIds = new Set(filteredUsers.map(user => user.id));\r\n        setSelectedUsers(allFilteredIds);\r\n    };\r\n\r\n    // Clear all selections\r\n    const clearSelection = () => {\r\n        setSelectedUsers(new Set());\r\n    };\r\n\r\n    const getRoleColor = (role: string) => {\r\n    switch (role) {\r\n        case \"admin\":\r\n        return \"bg-red-100 text-red-800\";\r\n        case \"employee\":\r\n        return \"bg-blue-100 text-blue-800\";\r\n        case \"user\":\r\n        return \"bg-green-100 text-green-800\";\r\n        default:\r\n        return \"bg-gray-100 text-gray-800\";\r\n    }\r\n    };\r\n\r\n    return (\r\n        <ProtectedRoute allowedRoles={[\"admin\"]}>\r\n            <div className=\"flex min-h-screen  overflow-x-hidden\">\r\n                {/* Sidebar */}\r\n                <Sidebar />\r\n\r\n                {/* Main content */}\r\n                <div className=\"flex-1 py-3 sm:py-6 pl-[2%] sm:pl-[3%] pr-[3%] sm:pr-[5%] overflow-x-auto\">\r\n                    <div className=\"flex items-center justify-between mb-4 border-b-3 pb-2 sm:pb-4 border-red-700\">\r\n                        <div>\r\n                            <h1 className=\"text-2xl font-bold text-red-700\">User Management</h1>\r\n                            <p className=\"text-sm text-gray-600 mt-1 \">\r\n                            Manage users, assign roles and departments, and control user access across the system.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <button\r\n                            onClick={() => router.push(\"/admindashboard\")}\r\n                            className=\"flex items-center gap-2 bg-red-700 text-white px-4 py-2 border-2 rounded-md hover:bg-white hover:text-[#B11016] hover-border-[#B11016]  transition\"\r\n                        >\r\n                            <FaArrowLeft /> Back to Dashboard\r\n                        </button>\r\n                        </div>\r\n\r\n                    {/* Summary Stats */}\r\n                    <div className=\"mt-5 grid grid-cols-1 sm:grid-cols-4 gap-4\">\r\n                        <div className=\"bg-white p-4 rounded-lg border border-gray-500 text-center drop-shadow-md\">\r\n                            <div className=\"text-2xl font-bold text-blue-600\">{users.length}</div>\r\n                            <div className=\"text-sm text-gray-600\">Total Users</div>\r\n                            <FaUsers className=\"text-3xl text-blue-600 mx-auto mt-2\" />\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-lg border border-gray-500 text-center drop-shadow-md\">\r\n                            <div className=\"text-2xl font-bold text-green-600\">{users.filter(u => u.role === 'user').length}</div>\r\n                            <div className=\"text-sm text-gray-600\">Collaborators</div>\r\n                            <FaUserFriends className=\"text-3xl text-green-600 mx-auto mt-2\" />\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-lg border border-gray-500 text-center drop-shadow-md\">\r\n                            <div className=\"text-2xl font-bold text-purple-600\">{users.filter(u => u.role === 'employee').length}</div>\r\n                            <div className=\"text-sm text-gray-600\">Employees</div>\r\n                            <FaUserTie className=\"text-3xl text-purple-600 mx-auto mt-2\" />\r\n                        </div>\r\n                        <div className=\"bg-white p-4 rounded-lg border border-gray-500 text-center drop-shadow-md\">\r\n                            <div className=\"text-2xl font-bold text-yellow-500\">{users.filter(u => u.role === 'admin').length}</div>\r\n                            <div className=\"text-sm text-gray-600\">Administrators</div>\r\n                            <FaUserShield className=\"text-3xl text-yellow-500 mx-auto mt-2\" />\r\n                        </div>\r\n                   \r\n                    </div>\r\n\r\n                    {/* Controls Section */}\r\n                    <div className=\"bg-white rounded-lg border border-gray-500 p-5 mt-5 mb-5 drop-shadow-md\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 mb-4\">\r\n                            {/* Search */}\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-[#B11016] mb-2\">Search Users</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search by name or email...\"\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    value={searchTerm}\r\n                                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Role Filter */}\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-[#B11016] mb-2\">Filter by Role</label>\r\n                                <select\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    value={roleFilter}\r\n                                    onChange={(e) => setRoleFilter(e.target.value)}\r\n                                >\r\n                                    <option value=\"all\">All Roles</option>\r\n                                    <option value=\"admin\">Super Admin</option>\r\n                                    <option value=\"employee\">Employee</option>\r\n                                    <option value=\"user\">Collaborator</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Department Filter */}\r\n                            <div>\r\n                            <label className=\"block text-sm font-medium text-[#B11016] mb-2\">\r\n                                Filter by Department\r\n                            </label>\r\n                            <select\r\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                value={departmentFilter}\r\n                                onChange={(e) => setDepartmentFilter(e.target.value)}\r\n                            >\r\n                                <option value=\"all\">All Departments</option>\r\n                                {departments.map((dept) => (\r\n                                <option key={dept.id} value={dept.id}>\r\n                                    {dept.name}\r\n                                </option>\r\n                                ))}\r\n                            </select>\r\n                            </div>\r\n\r\n                            {/* Actions */}\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-[#B11016] mb-1\">Actions</label>\r\n                                <button\r\n                                    onClick={() => setShowCreateModal(true)}\r\n                                    className=\"w-full px-4 mt-0.5 py-2.5 bg-[#B11016] border border-2 text-white rounded-md hover:bg-white hover:border-[#B11016] hover:text-[#B11016] transition text-sm\"\r\n                                >\r\n                                    Create User\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Bulk Operations */}\r\n                        {selectedUsers.size > 0 && (\r\n                            <div className=\"border-t pt-4\">\r\n                                <div className=\"flex items-center gap-4 flex-wrap\">\r\n                                    <span className=\"text-sm font-medium text-gray-700\">\r\n                                        {selectedUsers.size} user(s) selected\r\n                                    </span>\r\n                                    <button\r\n                                        onClick={() => setShowRoleModal(true)}\r\n                                        className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\r\n                                    >\r\n                                        Bulk Assign Role/Department\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={selectAllUsers}\r\n                                        className=\"px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\r\n                                    >\r\n                                        Select All\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={clearSelection}\r\n                                        className=\"px-3 py-1 bg-red-600 text-white rounded text-sm hover:bg-red-700\"\r\n                                    >\r\n                                        Clear Selection\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Users Table */}\r\n                    <div className=\"border border-gray-500 rounded-lg p-5 bg-white drop-shadow-xl\">\r\n                        <div className=\"overflow-x-auto\">\r\n                            {loading ? (\r\n                                <p className=\"text-center text-gray-500\">Loading users...</p>\r\n                            ) : filteredUsers.length === 0 ? (\r\n                                <p className=\"text-center text-gray-500\">No users found.</p>\r\n                            ) : (\r\n                                <table className=\"w-full text-sm rounded-lg overflow-hidden min-w-[1200px]\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    onChange={selectedUsers.size === filteredUsers.length ? clearSelection : selectAllUsers}\r\n                                                    checked={selectedUsers.size === filteredUsers.length && filteredUsers.length > 0}\r\n                                                    className=\"rounded border-gray-300\"\r\n                                                />\r\n                                            </th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">User ID</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Name</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Email</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Role</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Position</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Department</th>\r\n                                            <th className=\"p-3 text-left text-red-700 whitespace-nowrap\">Created Date</th>\r\n                                            <th className=\"p-3 text-center text-red-700 whitespace-nowrap\">Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {filteredUsers.map((user, i) => (\r\n                                            <tr key={i} className=\"border-t hover:bg-gray-50 transition-colors\">\r\n                                                <td className=\"p-3\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={selectedUsers.has(user.id)}\r\n                                                        onChange={() => toggleUserSelection(user.id)}\r\n                                                        className=\"rounded border-gray-300\"\r\n                                                    />\r\n                                                </td>\r\n                                                <td className=\"p-3 whitespace-nowrap\">{user.id}</td>\r\n                                                <td className=\"p-3 font-medium\">{user.full_name}</td>\r\n                                                <td className=\"p-3\">{user.email}</td>\r\n                                               <td className=\"p-3\">\r\n                                                <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRoleColor(user.role)}`}>\r\n                                                    {user.role}\r\n                                                </span>\r\n                                                </td>\r\n                                                <td className=\"p-3\">{user.position || \"N/A\"}</td>\r\n                                                <td className=\"p-3\">{getDepartmentName(user.department_id, user.role)}</td>\r\n                                                <td className=\"p-3 whitespace-nowrap\">{formatDate(user.created_at)}</td>\r\n                                                <td className=\"p-3 text-center\">\r\n                                                    <div className=\"flex items-center justify-center gap-2\">\r\n                                                       <button\r\n                                                            onClick={() => openEditUserModal(user)}\r\n                                                            className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\r\n                                                            disabled={updating === user.id}\r\n                                                        >\r\n                                                            {updating === user.id ? 'Updating...' : 'Edit'}\r\n                                                        </button>\r\n                                                        <span className=\"text-gray-400\">|</span>\r\n                                                        <button\r\n                                                            onClick={() => openDeleteModal(user)}\r\n                                                            className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\r\n                                                        >\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            {/* Create User Modal */}\r\n            {showCreateModal && (\r\n                <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\r\n                        <h2 className=\"text-xl font-bold text-red-700 mb-4\">Create New User</h2>\r\n                        <div className=\"space-y-4\">\r\n                            <div className=\"col-span-1\">\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                        First Name *\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newUser.first_name}\r\n                                        onChange={(e) =>\r\n                                        setNewUser({ ...newUser, first_name: e.target.value })\r\n                                        }\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                        placeholder=\"Enter first name\"\r\n                                    />\r\n                                    </div>\r\n                                    <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                        Last Name *\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={newUser.last_name}\r\n                                        onChange={(e) =>\r\n                                        setNewUser({ ...newUser, last_name: e.target.value })\r\n                                        }\r\n                                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                        placeholder=\"Enter last name\"\r\n                                    />\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email *</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    value={newUser.email}\r\n                                    onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter email address\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password *</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    value={newUser.password}\r\n                                    onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter password\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={newUser.contact_number}\r\n                                    onChange={(e) => setNewUser({ ...newUser, contact_number: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter contact number\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Position</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={newUser.position}\r\n                                    onChange={(e) => setNewUser({ ...newUser, position: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter position/job title\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role</label>\r\n                                <select\r\n                                    value={newUser.role}\r\n                                    onChange={(e) => handleRoleChange(e.target.value)}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                >\r\n                                    <option value=\"user\">Collaborator</option>\r\n                                    <option value=\"employee\">Employee</option>\r\n                                    <option value=\"admin\">Super Admin</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Department</label>\r\n                                <select\r\n                                    value={newUser.department_id}\r\n                                    onChange={(e) => setNewUser({ ...newUser, department_id: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    disabled={newUser.role === 'admin'}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {newUser.role === 'admin' ? 'Admins have no department' : 'Select Department (Optional)'}\r\n                                    </option>\r\n                                    {newUser.role !== 'admin' && departments.map((dept) => (\r\n                                        <option key={dept.id} value={dept.id}>\r\n                                            {dept.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {newUser.role === 'admin' && (\r\n                                    <p className=\"text-xs text-gray-500 mt-1\">\r\n                                        Admin users are not assigned to departments\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex gap-3 mt-6\">\r\n                            <button\r\n                                onClick={handleCreateUser}\r\n                                className=\"flex-1 bg-[#B11016] text-white py-2 rounded-md hover:bg-red-700 transition\"\r\n                            >\r\n                                Create User\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowCreateModal(false);\r\n                                    setNewUser({ \r\n                                        first_name: '', \r\n                                        last_name: '', \r\n                                        email: '', \r\n                                        role: 'user', \r\n                                        password: '', \r\n                                        contact_number: '', \r\n                                        position: '',\r\n                                        department_id: ''\r\n                                    });\r\n                                }}\r\n                                className=\"flex-1 bg-gray-500 text-white py-2 rounded-md hover:bg-gray-600 transition\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Edit User Modal */}\r\n            {showEditUserModal && selectedUserForEdit && (\r\n                <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\r\n                        <h2 className=\"text-xl font-bold text-red-700 mb-4\">Edit User</h2>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            Editing <span className=\"font-medium\">{selectedUserForEdit.full_name}</span>\r\n                        </p>\r\n                        <div className=\"space-y-4\">\r\n                           <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                First Name *\r\n                                </label>\r\n                                <input\r\n                                type=\"text\"\r\n                                value={editUser.first_name}\r\n                                onChange={(e) =>\r\n                                    setEditUser({ ...editUser, first_name: e.target.value })\r\n                                }\r\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                placeholder=\"Enter first name\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Last Name *\r\n                                </label>\r\n                                <input\r\n                                type=\"text\"\r\n                                value={editUser.last_name}\r\n                                onChange={(e) =>\r\n                                    setEditUser({ ...editUser, last_name: e.target.value })\r\n                                }\r\n                                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                placeholder=\"Enter last name\"\r\n                                />\r\n                            </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email *</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    value={editUser.email}\r\n                                    onChange={(e) => setEditUser({ ...editUser, email: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter email address\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Contact Number</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editUser.contact_number}\r\n                                    onChange={(e) => setEditUser({ ...editUser, contact_number: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter contact number\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Position</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editUser.position}\r\n                                    onChange={(e) => setEditUser({ ...editUser, position: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    placeholder=\"Enter position/job title\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current Role</label>\r\n                                <div className={`inline-block px-3 py-1 rounded-full text-sm font-medium mb-2 ${getRoleColor(selectedUserForEdit.role)}`}>\r\n                                    {selectedUserForEdit.role}\r\n                                </div>\r\n                                <select\r\n                                    value={editUser.role}\r\n                                    onChange={(e) => setEditUser({ ...editUser, role: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                >\r\n                                    <option value=\"user\">Collaborator</option>\r\n                                    <option value=\"employee\">Employee</option>\r\n                                    <option value=\"admin\">Super Admin</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Department</label>\r\n                                <div className=\"text-sm text-gray-600 mb-2\">\r\n                                    Current: {getDepartmentName(selectedUserForEdit.department_id, selectedUserForEdit.role)}\r\n                                </div>\r\n                                <select\r\n                                    value={editUser.department_id}\r\n                                    onChange={(e) => setEditUser({ ...editUser, department_id: e.target.value })}\r\n                                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                                    disabled={editUser.role === 'admin'}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {editUser.role === 'admin' ? 'Admins have no department' : 'No Department'}\r\n                                    </option>\r\n                                    {editUser.role !== 'admin' && departments.map((dept) => (\r\n                                        <option key={dept.id} value={dept.id}>\r\n                                            {dept.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {editUser.role === 'admin' && (\r\n                                    <p className=\"text-xs text-gray-500 mt-1\">\r\n                                        Admin users are not assigned to departments\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex gap-3 mt-6\">\r\n                            <button\r\n                                onClick={handleEditUserSubmit}\r\n                                disabled={updating === selectedUserForEdit.id}\r\n                                className=\"flex-1 bg-[#B11016] text-white py-2 rounded-md hover:bg-red-700 transition disabled:opacity-50\"\r\n                            >\r\n                                {updating === selectedUserForEdit.id ? 'Updating...' : 'Update User'}\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowEditUserModal(false);\r\n                                    setSelectedUserForEdit(null);\r\n                                    setEditUser({\r\n                                        first_name: '',\r\n                                        last_name: '',\r\n                                        email: '',\r\n                                        role: '',\r\n                                        contact_number: '',\r\n                                        position: '',\r\n                                        department_id: ''\r\n                                    });\r\n                                }}\r\n                                className=\"flex-1 bg-gray-500 text-white py-2 rounded-md hover:bg-gray-600 transition\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Delete Confirmation Modal */}\r\n            {showDeleteModal && selectedUserForDelete && (\r\n                <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                    <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                        <h2 className=\"text-xl font-bold text-red-700 mb-4\">Confirm Delete</h2>\r\n                        <p className=\"text-gray-600 mb-4\">\r\n                            Are you sure you want to delete user <span className=\"font-medium\">{selectedUserForDelete.full_name}</span>?\r\n                        </p>\r\n                        <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-3 mb-4\">\r\n                            <p className=\"text-yellow-800 text-sm\">\r\n                                <strong>Warning:</strong> This action cannot be undone. The user will be permanently removed from the system.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flex gap-3\">\r\n                            <button\r\n                                onClick={handleDeleteUser}\r\n                                className=\"flex-1 bg-red-600 text-white py-2 rounded-md hover:bg-red-700 transition\"\r\n                            >\r\n                                Delete User\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowDeleteModal(false);\r\n                                    setSelectedUserForDelete(null);\r\n                                }}\r\n                                className=\"flex-1 bg-gray-500 text-white py-2 rounded-md hover:bg-gray-600 transition\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Bulk Assignment Modal */}\r\n            {showRoleModal && (\r\n            <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n                <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n                <h2 className=\"text-xl font-bold text-red-700 mb-4\">Bulk Assignment</h2>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                    Assign role and/or department to {selectedUsers.size} selected user(s)\r\n                </p>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Select Role (Optional)</label>\r\n                        <select\r\n                            value={bulkRole}\r\n                            onChange={(e) => setBulkRole(e.target.value)}\r\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                        >\r\n                            <option value=\"\">Don't change role</option>\r\n                            <option value=\"user\">Collaborator</option>\r\n                            <option value=\"employee\">Employee</option>\r\n                            <option value=\"admin\">Super Admin</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Select Department (Optional)</label>\r\n                        <select\r\n                            value={bulkDepartment}\r\n                            onChange={(e) => setBulkDepartment(e.target.value)}\r\n                            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n                        >\r\n                            <option value=\"\">Don't change department</option>\r\n                            {departments.map((dept) => (\r\n                                <option key={dept.id} value={dept.id}>\r\n                                    {dept.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex gap-3 mt-6\">\r\n                    <button\r\n                    onClick={handleBulkAssignment}\r\n                    className=\"flex-1 bg-[#B11016] text-white py-2 rounded-md hover:bg-red-700 transition\"\r\n                    >\r\n                    Apply Changes\r\n                    </button>\r\n                    <button\r\n                    onClick={() => {\r\n                        setShowRoleModal(false);\r\n                        setBulkRole('');\r\n                        setBulkDepartment('');\r\n                    }}\r\n                    className=\"flex-1 bg-gray-500 text-white py-2 rounded-md hover:bg-gray-600 transition\"\r\n                    >\r\n                    Cancel\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n\r\n        </ProtectedRoute>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}