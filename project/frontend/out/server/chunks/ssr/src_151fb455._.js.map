{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/xampp/htdocs/synseai/project/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  allowedRoles: string[]; // e.g. [\"user\", \"employee\"]\r\n}\r\n\r\nexport default function ProtectedRoute({ children, allowedRoles }: ProtectedRouteProps) {\r\n  const router = useRouter();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"access_token\");\r\n    const role = sessionStorage.getItem(\"role\");\r\n\r\n    if (!token || !role) {\r\n      router.push(\"/login\");\r\n      return;\r\n    }\r\n\r\n    if (!allowedRoles.includes(role)) {\r\n      router.push(\"/\"); // redirect if role not allowed\r\n      return;\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [router, allowedRoles]);\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AASe,SAAS,eAAe,EAAE,QAAQ,EAAE,YAAY,EAAuB;IACpF,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,eAAe,OAAO,CAAC;QACrC,MAAM,OAAO,eAAe,OAAO,CAAC;QAEpC,IAAI,CAAC,SAAS,CAAC,MAAM;YACnB,OAAO,IAAI,CAAC;YACZ;QACF;QAEA,IAAI,CAAC,aAAa,QAAQ,CAAC,OAAO;YAChC,OAAO,IAAI,CAAC,MAAM,+BAA+B;YACjD;QACF;QAEA,WAAW;IACb,GAAG;QAAC;QAAQ;KAAa;IAEzB,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///C:/xampp/htdocs/synseai/project/frontend/src/app/companysetup/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { FaArrowLeft, FaCheckCircle, FaTimes } from \"react-icons/fa\";\r\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function CompanySetup() {\r\n    const API = process.env.NEXT_PUBLIC_API_URL;\r\n    const router = useRouter();\r\n\r\n    // Company Information - mapped to backend fields\r\n    const [companyName, setCompanyName] = useState(\"\");\r\n    const [companyWebsite, setCompanyWebsite] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\"); // mapped to location in original\r\n    const [industry, setIndustry] = useState(\"\");\r\n    const [companySize, setCompanySize] = useState(\"\");\r\n    const [customCompanySize, setCustomCompanySize] = useState(\"\");\r\n    const [customIndustry, setCustomIndustry] = useState(\"\");\r\n    const [color, setColor] = useState(\"#000000\");\r\n    const [companyLogo, setCompanyLogo] = useState<File | null>(null);\r\n    const [existingLogoUrl, setExistingLogoUrl] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n    const [collabType, setCollabType] = useState(\"\");\r\n    const logoInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    // Point of Contact - this will be the contact_email for the company\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [contactEmail, setContactEmail] = useState(\"\"); // mapped from email\r\n    const [position, setPosition] = useState(\"\");\r\n    const [contactNumber, setContactNumber] = useState(\"\");\r\n\r\n    // Loading and error states\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    // New states for company management\r\n    const [hasExistingCompany, setHasExistingCompany] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [originalCompanyData, setOriginalCompanyData] = useState<any>(null);\r\n    const [companyId, setCompanyId] = useState(\"\");\r\n\r\n    // Modal state\r\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n    const [modalMessage, setModalMessage] = useState(\"\");\r\n    const [isNewCompany, setIsNewCompany] = useState(false);\r\n\r\n    // Convert company size number to display string\r\n    const sizeToString = (size: number): string => {\r\n        if (size <= 10) return \"1-10\";\r\n        if (size <= 50) return \"11-50\";\r\n        if (size <= 200) return \"51-200\";\r\n        if (size <= 500) return \"201-500\";\r\n        if (size <= 1000) return \"501-1000\";\r\n        if (size > 1000) return \"1000+\";\r\n        return \"Other\";\r\n    };\r\n\r\n    // Fetch user data and company data on component mount\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const token = sessionStorage.getItem(\"access_token\");\r\n            if (!token) return;\r\n\r\n            try {\r\n                // Fetch user data first\r\n                const resUser = await fetch(`${API}/api/auth/protected`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                });\r\n\r\n                if (resUser.ok) {\r\n                    const userData = await resUser.json();\r\n                    const user = userData.user;\r\n\r\n                    setFullname(`${user.first_name || \"\"} ${user.last_name || \"\"}`);\r\n                    setContactEmail(user.email || \"\");\r\n                    setPosition(user.position || \"\");\r\n                    setContactNumber(user.contact_number || \"\");\r\n                }\r\n\r\n                // Try to fetch existing company data\r\n                const resCompany = await fetch(`${API}/api/company`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                });\r\n\r\n                if (resCompany.ok) {\r\n                    const companyData = await resCompany.json();\r\n\r\n                    // Pre-fill all company fields\r\n                    setCompanyName(companyData.name || \"\");\r\n                    setCompanyWebsite(companyData.website || \"\");\r\n                    setAddress(companyData.address || \"\");\r\n                    setIndustry(companyData.industry || \"\");\r\n                    setPosition(companyData.position || \"\");\r\n                    setBio(companyData.bio || \"\");\r\n                    setColor(companyData.color || \"#000000\");\r\n                    setCollabType(companyData.collab_type || \"\");\r\n\r\n                    // Handle company size\r\n                    if (companyData.size) {\r\n                        const sizeString = sizeToString(companyData.size);\r\n                        if (sizeString === \"Other\") {\r\n                            setCompanySize(\"Other\");\r\n                            setCustomCompanySize(companyData.size.toString());\r\n                        } else {\r\n                            setCompanySize(sizeString);\r\n                        }\r\n                    }\r\n\r\n                    // Handle industry\r\n                    const predefinedIndustries = [\r\n                        \"Financial Technology\", \"Healthcare\", \"Education\", \"Technology\",\r\n                        \"Manufacturing\", \"Retail\", \"Finance\", \"Consulting\", \"Real Estate\",\r\n                        \"Media & Entertainment\"\r\n                    ];\r\n                    if (companyData.industry && !predefinedIndustries.includes(companyData.industry)) {\r\n                        setIndustry(\"Other\");\r\n                        setCustomIndustry(companyData.industry);\r\n                    }\r\n\r\n                    // Store existing logo URL\r\n                    if (companyData.logo) {\r\n                        setExistingLogoUrl(companyData.logo);\r\n                    }\r\n\r\n                    setHasExistingCompany(true);\r\n                    setCompanyId(companyData.id);\r\n\r\n                    // Store original data for cancel functionality\r\n                    setOriginalCompanyData({\r\n                        name: companyData.name || \"\",\r\n                        website: companyData.website || \"\",\r\n                        address: companyData.address || \"\",\r\n                        industry: companyData.industry || \"\",\r\n                        size: companyData.size,\r\n                        bio: companyData.bio || \"\",\r\n                        position: companyData.position || \"\",\r\n                        color: companyData.color || \"#000000\",\r\n                        collab_type: companyData.collab_type || \"\",\r\n                        logo: companyData.logo || \"\"\r\n                    });\r\n                } else if (resCompany.status === 404) {\r\n                    // No company exists, user can create one\r\n                    setHasExistingCompany(false);\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error fetching data:\", err);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [API]);\r\n\r\n    // Convert file to base64\r\n    const fileToBase64 = (file: File): Promise<string> => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = error => reject(error);\r\n        });\r\n    };\r\n\r\n    // Handle Logo Upload\r\n    const handleLogoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            setCompanyLogo(e.target.files[0]);\r\n            setExistingLogoUrl(\"\"); // Clear existing logo when new one is uploaded\r\n        }\r\n    };\r\n\r\n    const handleLogoDrop = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n            setCompanyLogo(e.dataTransfer.files[0]);\r\n            setExistingLogoUrl(\"\"); // Clear existing logo when new one is uploaded\r\n        }\r\n    };\r\n\r\n    // Handle edit mode toggle\r\n    const handleEditClick = () => {\r\n        setIsEditMode(true);\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n    };\r\n\r\n    // Handle cancel edit\r\n    const handleCancelEdit = () => {\r\n        if (originalCompanyData) {\r\n            // Restore original values\r\n            setCompanyName(originalCompanyData.name);\r\n            setCompanyWebsite(originalCompanyData.website);\r\n            setAddress(originalCompanyData.address);\r\n            setBio(originalCompanyData.bio);\r\n            setColor(originalCompanyData.color);\r\n            setCollabType(originalCompanyData.collab_type);\r\n            setExistingLogoUrl(originalCompanyData.logo);\r\n            setCompanyLogo(null);\r\n\r\n            // Handle industry restoration\r\n            const predefinedIndustries = [\r\n                \"Financial Technology\", \"Healthcare\", \"Education\", \"Technology\",\r\n                \"Manufacturing\", \"Retail\", \"Finance\", \"Consulting\", \"Real Estate\",\r\n                \"Media & Entertainment\"\r\n            ];\r\n            if (originalCompanyData.industry && !predefinedIndustries.includes(originalCompanyData.industry)) {\r\n                setIndustry(\"Other\");\r\n                setCustomIndustry(originalCompanyData.industry);\r\n            } else {\r\n                setIndustry(originalCompanyData.industry);\r\n                setCustomIndustry(\"\");\r\n            }\r\n\r\n            // Handle size restoration\r\n            if (originalCompanyData.size) {\r\n                const sizeString = sizeToString(originalCompanyData.size);\r\n                if (sizeString === \"Other\") {\r\n                    setCompanySize(\"Other\");\r\n                    setCustomCompanySize(originalCompanyData.size.toString());\r\n                } else {\r\n                    setCompanySize(sizeString);\r\n                    setCustomCompanySize(\"\");\r\n                }\r\n            } else {\r\n                setCompanySize(\"\");\r\n                setCustomCompanySize(\"\");\r\n            }\r\n        }\r\n        setIsEditMode(false);\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n    };\r\n\r\n    // Close modal and handle navigation\r\n    const handleCloseModal = () => {\r\n        setShowSuccessModal(false);\r\n        if (isNewCompany) {\r\n            // Redirect to dashboard for new companies\r\n            setTimeout(() => {\r\n                router.push(\"/dashboard\");\r\n            }, 300);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n\r\n        if (!companyName.trim() || !contactEmail.trim()) {\r\n            setError(\"Company name and contact email are required fields.\");\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            // --- 1. Prepare company update payload ---\r\n            let logoBase64 = \"\";\r\n            if (companyLogo) {\r\n                logoBase64 = await fileToBase64(companyLogo);\r\n            } else if (existingLogoUrl && !companyLogo) {\r\n                logoBase64 = existingLogoUrl;\r\n            }\r\n\r\n            const finalIndustry = industry === \"Other\" ? customIndustry : industry;\r\n            const finalSizeString = companySize === \"Other\" ? customCompanySize : companySize;\r\n\r\n            let finalSize: number | undefined;\r\n            if (finalSizeString) {\r\n                if (finalSizeString.includes(\"-\")) {\r\n                    const parts = finalSizeString.split(\"-\");\r\n                    finalSize = parseInt(parts[1]) || parseInt(parts[0]);\r\n                } else if (finalSizeString.includes(\"+\")) {\r\n                    finalSize = parseInt(finalSizeString.replace(\"+\", \"\"));\r\n                } else {\r\n                    finalSize = parseInt(finalSizeString);\r\n                }\r\n                if (isNaN(finalSize)) finalSize = undefined;\r\n            }\r\n\r\n            const companyPayload: any = {\r\n                name: companyName,\r\n                contact_email: contactEmail,\r\n            };\r\n\r\n            if (address.trim()) companyPayload.address = address;\r\n            if (companyWebsite.trim()) companyPayload.website = companyWebsite;\r\n            if (color.trim()) companyPayload.color = color;\r\n            if (logoBase64) companyPayload.logo = logoBase64;\r\n            if (bio.trim()) companyPayload.bio = bio;\r\n            if (finalIndustry && finalIndustry.trim()) companyPayload.industry = finalIndustry;\r\n            if (finalSize !== undefined) companyPayload.size = finalSize;\r\n            if (collabType && collabType.trim()) companyPayload.collab_type = collabType;\r\n\r\n            const token = sessionStorage.getItem(\"access_token\");\r\n            if (!token) {\r\n                setError(\"Authentication required. Please log in first.\");\r\n                return;\r\n            }\r\n\r\n            // --- 2. Update company ---\r\n            const method = hasExistingCompany ? \"PUT\" : \"POST\";\r\n            const companyRes = await fetch(`${API}/api/company`, {\r\n                method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(companyPayload),\r\n            });\r\n\r\n            const companyData = await companyRes.json();\r\n            if (!companyRes.ok) throw new Error(companyData.error || \"Company update failed\");\r\n\r\n            // --- 3. Update user contact info ---\r\n            const userId = sessionStorage.getItem(\"user_id\"); // Or however you get logged-in user ID\r\n            if (userId) {\r\n                const userPayload = {\r\n                    contact_number: contactNumber,\r\n                    position: position\r\n                };\r\n\r\n                const userRes = await fetch(`${API}/api/user/${userId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify(userPayload),\r\n                });\r\n\r\n                const userData = await userRes.json();\r\n                if (!userRes.ok) throw new Error(userData.message || \"User update failed\");\r\n            }\r\n\r\n            // Success handling\r\n            setModalMessage(`Company \"${companyData.company.name}\" ${hasExistingCompany ? \"updated\" : \"created\"} successfully!`);\r\n            setShowSuccessModal(true);\r\n\r\n        } catch (err: any) {\r\n            console.error(\"Error with update:\", err);\r\n            setError(err.message || \"An unexpected error occurred.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    // Check if fields should be read-only\r\n    const isReadOnly = hasExistingCompany && !isEditMode;\r\n\r\n    // Get button text based on state\r\n    const getButtonText = () => {\r\n        if (isLoading) {\r\n            if (hasExistingCompany) {\r\n                return isEditMode ? \"SAVING...\" : \"LOADING...\";\r\n            }\r\n            return \"SETTING UP COMPANY...\";\r\n        }\r\n\r\n        if (hasExistingCompany) {\r\n            return isEditMode ? \"SAVE CHANGES\" : \"EDIT COMPANY\";\r\n        }\r\n\r\n        return \"SETUP COMPANY\";\r\n    };\r\n\r\n    // Handle button click\r\n    const handleButtonClick = (e: React.FormEvent) => {\r\n        if (hasExistingCompany && !isEditMode) {\r\n            e.preventDefault();\r\n            handleEditClick();\r\n        } else {\r\n            handleSubmit(e);\r\n        }\r\n    };\r\n\r\n    const pageVariants = {\r\n        initial: { opacity: 0, y: 30 },\r\n        animate: { opacity: 1, y: 0, transition: { duration: 0.5, ease: [0.25, 0.1, 0.25, 1] as [number, number, number, number] } },\r\n        exit: { opacity: 0, y: -30, transition: { duration: 0.4, ease: [0.25, 0.1, 0.25, 1] as [number, number, number, number] } },\r\n    };\r\n\r\n    // Modal animation variants\r\n    const modalOverlayVariants = {\r\n        hidden: { opacity: 0 },\r\n        visible: { opacity: 1 }\r\n    };\r\n\r\n    const modalVariants = {\r\n        hidden: {\r\n            opacity: 0,\r\n            scale: 0.8,\r\n            y: 50\r\n        },\r\n        visible: {\r\n            opacity: 1,\r\n            scale: 1,\r\n            y: 0,\r\n            transition: {\r\n                type: \"spring\" as const,\r\n                stiffness: 300,\r\n                damping: 25\r\n            }\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            scale: 0.8,\r\n            y: 50,\r\n            transition: {\r\n                duration: 0.2\r\n            }\r\n        }\r\n    };\r\n\r\n    const iconVariants = {\r\n        hidden: { scale: 0, rotate: -180 },\r\n        visible: {\r\n            scale: 1,\r\n            rotate: 0,\r\n            transition: {\r\n                delay: 0.2,\r\n                type: \"spring\" as const,\r\n                stiffness: 300,\r\n                damping: 20\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ProtectedRoute allowedRoles={[\"user\"]}>\r\n            <AnimatePresence mode=\"wait\">\r\n                <motion.div\r\n                    key=\"dashboard-page\"\r\n                    variants={pageVariants}\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"exit\"\r\n                    className=\"min-h-screen bg-white flex flex-col items-center px-[10%] py-8\"\r\n                >\r\n\r\n                    {/* Header */}\r\n                    <div className=\"relative flex items-center w-full mt-2 mb-10\">\r\n                        {/* Back Button */}\r\n                        <button\r\n                            onClick={() => {\r\n                                if (hasExistingCompany) {\r\n                                    // ✅ User already has a company or updated it → Go to dashboard\r\n                                    router.push(\"/dashboard\");\r\n                                } else {\r\n                                    // 🚫 No company yet → Must finish setup → Stay in collab flow\r\n                                    router.push(\"/collabhome\");\r\n                                }\r\n                            }}\r\n                            className=\"absolute left-0 flex items-center text-[#B11016] hover:text-[#800b10]\"\r\n                        >\r\n                            <FaArrowLeft className=\"mr-2\" />\r\n                            <span className=\"hidden sm:inline\">Back</span>\r\n                        </button>\r\n\r\n                        {/* Title */}\r\n                        <div className=\"text-center w-full\">\r\n                            <h1 className=\"text-2xl sm:text-4xl font-bold text-[#B11016] pb-4\">\r\n                                Company Setup Form\r\n                            </h1>\r\n                            <p className=\"text-md text-black mb-6\">\r\n                                {hasExistingCompany\r\n                                    ? \"Manage your company information\"\r\n                                    : \"Set up your company that's aiming to partner with BPI\"}\r\n                            </p>\r\n                            <div className=\"mx-2 border-b-[3px] border-[#B11016]\"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Error/Success Messages */}\r\n                    {error && (\r\n                        <div className=\"w-full mb-6 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                            {error}\r\n                        </div>\r\n                    )}\r\n                    {success && (\r\n                        <div className=\"w-full mb-6 p-4 bg-green-100 border border-green-400 text-green-700 rounded\">\r\n                            {success}\r\n                        </div>\r\n                    )}\r\n\r\n                    <form onSubmit={handleButtonClick} className=\"w-full\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 w-full\">\r\n                            {/* LEFT COLUMN - COMPANY INFO */}\r\n                            <div className=\"space-y-6\">\r\n                                <h2 className=\"flex items-center space-x-3 text-[#B11016] text-2xl font-bold\">\r\n                                    <span className=\"flex items-center justify-center w-8 h-8 rounded-full border-2 border-[#B11016] text-base font-bold leading-none\">\r\n                                        1\r\n                                    </span>\r\n                                    <span>Company Information</span>\r\n                                </h2>\r\n\r\n                                {/* Company Name */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        COMPANY NAME *\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={companyName}\r\n                                            onChange={(e) => setCompanyName(e.target.value)}\r\n                                            placeholder=\"Enter Company Name\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`appearance-none w-full px-0 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 \r\n                                    focus:outline-none text-sm sm:text-base\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : 'bg-transparent'}`}\r\n                                            required\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016]\r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Website */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        COMPANY WEBSITE LINK\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"url\"\r\n                                            value={companyWebsite}\r\n                                            onChange={(e) => setCompanyWebsite(e.target.value)}\r\n                                            placeholder=\"Enter Website Link (https://...)\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`appearance-none w-full px-0 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 \r\n                                    focus:outline-none text-sm sm:text-base\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : 'bg-transparent'}`}\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016] \r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Address */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        COMPANY ADDRESS\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={address}\r\n                                            onChange={(e) => setAddress(e.target.value)}\r\n                                            placeholder=\"Enter Company Address\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`appearance-none w-full px-0 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 \r\n                                    focus:outline-none text-sm sm:text-base\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : 'bg-transparent'}`}\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016] \r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Company Bio */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        COMPANY BIO\r\n                                    </label>\r\n                                    <textarea\r\n                                        value={bio}\r\n                                        onChange={(e) => setBio(e.target.value)}\r\n                                        placeholder=\"Brief description of your company...\"\r\n                                        readOnly={isReadOnly}\r\n                                        className={`w-full border border-gray-300 rounded-md py-2 px-3 focus:border-[#B11016] outline-none resize-vertical\r\n                                ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Company Size */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-4\">\r\n                                        COMPANY SIZE (Number of Employees)\r\n                                    </label>\r\n                                    <select\r\n                                        value={companySize}\r\n                                        onChange={(e) => setCompanySize(e.target.value)}\r\n                                        disabled={isReadOnly}\r\n                                        className={`border border-gray-300 rounded-md py-2 px-3 focus:border-[#B11016] outline-none w-full\r\n                                ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                    >\r\n                                        <option value=\"\">Select Company Size</option>\r\n                                        <option value=\"1-10\">1-10 employees</option>\r\n                                        <option value=\"11-50\">11-50 employees</option>\r\n                                        <option value=\"51-200\">51-200 employees</option>\r\n                                        <option value=\"201-500\">201-500 employees</option>\r\n                                        <option value=\"501-1000\">501-1000 employees</option>\r\n                                        <option value=\"1000+\">1000+ employees</option>\r\n                                        <option value=\"Other\">Other (specify number)</option>\r\n                                    </select>\r\n\r\n                                    {companySize === \"Other\" && (\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={customCompanySize}\r\n                                            onChange={(e) => setCustomCompanySize(e.target.value)}\r\n                                            placeholder=\"Enter exact number of employees\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`w-full border-b-2 border-gray-300 focus:border-[#B11016] outline-none py-2 mt-2\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                            min=\"1\"\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Industry */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-4\">\r\n                                        COMPANY INDUSTRY\r\n                                    </label>\r\n                                    <select\r\n                                        value={industry}\r\n                                        onChange={(e) => setIndustry(e.target.value)}\r\n                                        disabled={isReadOnly}\r\n                                        className={`border border-gray-300 rounded-md py-2 px-3 focus:border-[#B11016] outline-none w-full\r\n                                ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                    >\r\n                                        <option value=\"\">Select Industry</option>\r\n                                        <option>Financial Technology</option>\r\n                                        <option>Healthcare</option>\r\n                                        <option>Education</option>\r\n                                        <option>Technology</option>\r\n                                        <option>Manufacturing</option>\r\n                                        <option>Retail</option>\r\n                                        <option>Finance</option>\r\n                                        <option>Consulting</option>\r\n                                        <option>Real Estate</option>\r\n                                        <option>Media & Entertainment</option>\r\n                                        <option value=\"Other\">Other</option>\r\n                                    </select>\r\n                                    {industry === \"Other\" && (\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={customIndustry}\r\n                                            onChange={(e) => setCustomIndustry(e.target.value)}\r\n                                            placeholder=\"Enter industry\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`w-full border-b-2 border-gray-300 focus:border-[#B11016] outline-none py-2 mt-2\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Logo & Color Picker in 1 Row */}\r\n                                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n                                    {/* Company Logo */}\r\n                                    <div>\r\n                                        <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                            COMPANY LOGO\r\n                                        </label>\r\n                                        <div\r\n                                            onDrop={!isReadOnly ? handleLogoDrop : undefined}\r\n                                            onDragOver={!isReadOnly ? (e) => e.preventDefault() : undefined}\r\n                                            className={`border-2 border-dashed border-[#B11016] rounded-lg p-6 text-center\r\n                                    ${!isReadOnly ? 'cursor-pointer hover:border-[#B11016]' : 'cursor-not-allowed bg-gray-100'}`}\r\n                                            onClick={!isReadOnly ? () => logoInputRef.current?.click() : undefined}\r\n                                        >\r\n                                            {existingLogoUrl && !companyLogo ? (\r\n                                                <div>\r\n                                                    <img\r\n                                                        src={existingLogoUrl}\r\n                                                        alt=\"Company Logo\"\r\n                                                        className=\"max-w-full max-h-24 mx-auto mb-2\"\r\n                                                    />\r\n                                                    <p className=\"text-gray-500 text-sm\">Current logo</p>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <p className=\"text-gray-500\">\r\n                                                    {isReadOnly ? \"Logo upload disabled\" :\r\n                                                        \"Drag & drop logo or \"}\r\n                                                    {!isReadOnly && <span className=\"underline text-[#B11016]\">Browse</span>}\r\n                                                </p>\r\n                                            )}\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                accept=\".jpeg,.jpg,.png\"\r\n                                                ref={logoInputRef}\r\n                                                className=\"hidden\"\r\n                                                onChange={handleLogoChange}\r\n                                                disabled={isReadOnly}\r\n                                            />\r\n                                        </div>\r\n                                        {companyLogo && (\r\n                                            <p className=\"text-green-700 mt-2 text-sm\">\r\n                                                New upload: {companyLogo.name}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* Brand Color */}\r\n                                    <div>\r\n                                        <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                            BRAND COLOR\r\n                                        </label>\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <input\r\n                                                type=\"color\"\r\n                                                value={color}\r\n                                                onChange={(e) => setColor(e.target.value)}\r\n                                                disabled={isReadOnly}\r\n                                                className={`w-12 h-12 border rounded\r\n                                        ${isReadOnly ? 'cursor-not-allowed' : ''}`}\r\n                                            />\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={color}\r\n                                                onChange={(e) => setColor(e.target.value)}\r\n                                                readOnly={isReadOnly}\r\n                                                className={`border border-gray-300 rounded px-3 py-2 font-mono\r\n                                        ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : ''}`}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* RIGHT COLUMN - POINT OF CONTACT */}\r\n                            <div className=\"space-y-6\">\r\n                                <h2 className=\"flex items-center space-x-3 text-[#B11016] text-2xl font-bold\">\r\n                                    <span className=\"flex items-center justify-center w-8 h-8 rounded-full border-2 border-[#B11016] text-base font-bold leading-none\">\r\n                                        2\r\n                                    </span>\r\n                                    <span>Point of Contact</span>\r\n                                </h2>\r\n\r\n                                {/* Full Name */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        FULL NAME\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={fullname}\r\n                                            readOnly\r\n                                            placeholder=\"Loading...\"\r\n                                            className=\"appearance-none w-full px-2 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 bg-gray-100 \r\n                                    focus:outline-none text-sm sm:text-base cursor-not-allowed\"\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016]\r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Contact Email */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        CONTACT EMAIL *\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            value={contactEmail}\r\n                                            readOnly\r\n                                            placeholder=\"Loading...\"\r\n                                            className=\"appearance-none w-full px-2 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 bg-gray-100 \r\n                                    focus:outline-none text-sm sm:text-base cursor-not-allowed\"\r\n                                            required\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016]\r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Position/Title */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        POSITION/TITLE\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={position}\r\n                                            onChange={(e) => setPosition(e.target.value)}\r\n                                            placeholder=\"Enter Position/Title\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`appearance-none w-full px-0 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 \r\n                                    focus:outline-none text-sm sm:text-base\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : 'bg-transparent'}`}\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016]\r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Contact Number */}\r\n                                <div>\r\n                                    <label className=\"block text-sm sm:text-base font-medium text-[#B11016] mb-2\">\r\n                                        CONTACT NUMBER\r\n                                    </label>\r\n                                    <div className=\"relative w-full group\">\r\n                                        <input\r\n                                            type=\"tel\"\r\n                                            value={contactNumber}\r\n                                            onChange={(e) => setContactNumber(e.target.value)}\r\n                                            placeholder=\"Enter your Contact Number\"\r\n                                            readOnly={isReadOnly}\r\n                                            className={`appearance-none w-full px-0 py-3 border-0 \r\n                                    placeholder-gray-400 text-gray-900 \r\n                                    focus:outline-none text-sm sm:text-base\r\n                                    ${isReadOnly ? 'bg-gray-100 cursor-not-allowed' : 'bg-transparent'}`}\r\n                                        />\r\n                                        <div className=\"absolute left-0 bottom-0 w-full h-[2px] bg-gray-300\" />\r\n                                        <div className=\"absolute left-0 bottom-0 h-[2px] bg-[#B11016] \r\n                                    transition-transform duration-300 ease-in-out \r\n                                    origin-center scale-x-0 w-full \r\n                                    group-focus-within:scale-x-100\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Submit and Cancel Buttons */}\r\n                        <div className=\"w-full mt-10\">\r\n                            {hasExistingCompany && isEditMode ? (\r\n                                <div className=\"flex space-x-4\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={isLoading}\r\n                                        className=\"flex-1 bg-[#B11016] border-2 border-transparent text-white py-3 px-6 font-bold text-lg hover:bg-white hover:border-[#B11016] hover:text-[#B11016] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    >\r\n                                        {getButtonText()}\r\n                                    </button>\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={handleCancelEdit}\r\n                                        disabled={isLoading}\r\n                                        className=\"flex-1 bg-white border-2 border-[#B11016] text-[#B11016] py-3 px-6 font-bold text-lg hover:bg-[#B11016] hover:text-white transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    >\r\n                                        CANCEL\r\n                                    </button>\r\n                                </div>\r\n                            ) : (\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    disabled={isLoading}\r\n                                    className=\"w-full bg-[#B11016] border-2 border-transparent text-white py-3 px-6 font-bold text-lg hover:bg-white hover:border-[#B11016] hover:text-[#B11016] transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                >\r\n                                    {getButtonText()}\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n\r\n                    {/* Success Modal */}\r\n                    <AnimatePresence>\r\n                        {showSuccessModal && (\r\n                            <motion.div\r\n                                className=\"fixed inset-0 z-50 flex items-center justify-center p-4\"\r\n                                initial={{ opacity: 0 }}\r\n                                animate={{ opacity: 1 }}\r\n                                exit={{ opacity: 0 }}\r\n                                transition={{ duration: 0.3 }}\r\n                            >\r\n                                {/* Confetti */}\r\n                                <Confetti show={showSuccessModal} />\r\n\r\n                                {/* Backdrop */}\r\n                                <motion.div\r\n                                    className=\"absolute inset-0 bg-black/30 backdrop-blur-sm\"\r\n                                    onClick={handleCloseModal}\r\n                                    initial={{ opacity: 0 }}\r\n                                    animate={{ opacity: 1 }}\r\n                                    exit={{ opacity: 0 }}\r\n                                />\r\n\r\n                                {/* Modal */}\r\n                                <motion.div\r\n                                    className=\"relative bg-white rounded-2xl shadow-2xl max-w-md w-full mx-4 overflow-hidden\"\r\n                                    initial={{ scale: 0.8, opacity: 0 }}\r\n                                    animate={{ scale: 1, opacity: 1 }}\r\n                                    exit={{ scale: 0.8, opacity: 0 }}\r\n                                    transition={{ type: \"spring\", stiffness: 200, damping: 20 }}\r\n                                >\r\n                                    {/* Close Button */}\r\n                                    <button\r\n                                        onClick={handleCloseModal}\r\n                                        className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors z-10\"\r\n                                    >\r\n                                        <FaTimes size={20} />\r\n                                    </button>\r\n\r\n                                    {/* Modal Content */}\r\n                                    <div className=\"p-8 text-center\">\r\n                                        {/* Success Icon with Pulse */}\r\n                                        <div className=\"relative mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-6\">\r\n                                            {/* Pulse Rings */}\r\n                                            <motion.div\r\n                                                className=\"absolute inset-0 bg-green-200 rounded-full\"\r\n                                                animate={{ scale: [1, 1.5, 2], opacity: [0.3, 0.1, 0] }}\r\n                                                transition={{ duration: 2, repeat: Infinity, ease: \"easeOut\" }}\r\n                                            />\r\n                                            <motion.div\r\n                                                className=\"absolute inset-0 bg-green-200 rounded-full\"\r\n                                                animate={{ scale: [1, 1.5, 2], opacity: [0.3, 0.1, 0] }}\r\n                                                transition={{ duration: 2, repeat: Infinity, ease: \"easeOut\", delay: 0.5 }}\r\n                                            />\r\n                                            <FaCheckCircle className=\"text-green-600 text-2xl relative z-10\" />\r\n                                        </div>\r\n\r\n                                        {/* Success Title */}\r\n                                        <motion.h3\r\n                                            className=\"text-2xl font-bold text-gray-900 mb-4\"\r\n                                            initial={{ opacity: 0, y: 20 }}\r\n                                            animate={{ opacity: 1, y: 0 }}\r\n                                            transition={{ delay: 0.3, duration: 0.4 }}\r\n                                        >\r\n                                            {isNewCompany ? \"Company Created!\" : \"Company Updated!\"}\r\n                                        </motion.h3>\r\n\r\n                                        {/* Success Message */}\r\n                                        <motion.p\r\n                                            className=\"text-gray-600 mb-8 leading-relaxed\"\r\n                                            initial={{ opacity: 0, y: 20 }}\r\n                                            animate={{ opacity: 1, y: 0 }}\r\n                                            transition={{ delay: 0.4, duration: 0.4 }}\r\n                                        >\r\n                                            {modalMessage}\r\n                                        </motion.p>\r\n\r\n                                        {/* Action Button */}\r\n                                        <motion.div\r\n                                            className=\"space-y-3\"\r\n                                            initial={{ opacity: 0, y: 20 }}\r\n                                            animate={{ opacity: 1, y: 0 }}\r\n                                            transition={{ delay: 0.5, duration: 0.4 }}\r\n                                        >\r\n                                            <button\r\n                                                onClick={handleCloseModal}\r\n                                                className=\"w-full bg-[#B11016] text-white py-3 px-6 rounded-lg font-semibold hover:bg-[#800b10] transition-colors transform hover:scale-105 active:scale-95\"\r\n                                            >\r\n                                                {isNewCompany ? \"Go to Dashboard\" : \"Continue\"}\r\n                                            </button>\r\n                                        </motion.div>\r\n                                    </div>\r\n                                </motion.div>\r\n                            </motion.div>\r\n                        )}\r\n                    </AnimatePresence>\r\n                </motion.div>\r\n            </AnimatePresence>\r\n        </ProtectedRoute>\r\n    );\r\n}\r\n\r\ntype Particle = {\r\n    id: number;\r\n    x: number;\r\n    rotation: number;\r\n    color: string;\r\n    size: number;\r\n    drift: number;\r\n};\r\n\r\nconst Confetti = ({ show }: { show: boolean }) => {\r\n    const [particles, setParticles] = useState<Particle[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            const newParticles = Array.from({ length: 50 }, (_, i) => ({\r\n                id: i,\r\n                x: Math.random() * 100,\r\n                rotation: Math.random() * 360,\r\n                color: [\r\n                    '#ff6b6b', '#4ecdc4', '#45b7d1',\r\n                    '#f9ca24', '#6c5ce7', '#a29bfe',\r\n                    '#fd79a8', '#00b894', '#e84393'\r\n                ][Math.floor(Math.random() * 9)],\r\n                size: Math.random() * 8 + 4,\r\n                drift: (Math.random() - 0.5) * 2,\r\n            }));\r\n            setParticles(newParticles);\r\n\r\n            const timer = setTimeout(() => setParticles([]), 3000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [show]);\r\n\r\n    if (!show || particles.length === 0) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 pointer-events-none z-[60] overflow-hidden\">\r\n            {particles.map((particle) => (\r\n                <motion.div\r\n                    key={particle.id}\r\n                    className=\"absolute rounded-sm\"\r\n                    style={{\r\n                        backgroundColor: particle.color,\r\n                        width: `${particle.size}px`,\r\n                        height: `${particle.size}px`,\r\n                        left: `${particle.x}%`,\r\n                    }}\r\n                    initial={{ y: -20, opacity: 1 }}\r\n                    animate={{\r\n                        y: window.innerHeight + 100,\r\n                        x: particle.drift * 100,\r\n                        rotate: 720,\r\n                        opacity: 0,\r\n                    }}\r\n                    transition={{\r\n                        duration: 3,\r\n                        ease: \"easeOut\",\r\n                        delay: Math.random() * 0.5,\r\n                    }}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};"],"names":[],"mappings":"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","debugId":null}}]
}